const selectors = {
    homePage: {
        signInButton: '//li[@class="authorization-link"]/a[contains(text(), "Sign In")]',
        createAccountLink: "/html/body/div[2]/header/div[1]/div/ul/li[3]/a",
        welcomeMessage: ".logged-in",
        welcomeDropdownButton: 'button[data-action="customer-menu-toggle"]',
        signOutButton: 'a[href*="customer/account/logout"]',
        searchBar: '//input[@name="q"]',
        searchButton: '//button[@type="submit" and @aria-label="Search"]',
        searchResults: ".product-item-link",
    },
    loginPage: {
        emailInput: "//input[@id='email']",
        passwordInput: "//input[@id='pass']",
        signInButton: "//button[@id='send2']",
        signUpErrorMessage: "//div[contains(@class, 'page messages')]",
        emailErrorMessage: "//div[@id='email-error']",
        passwordErrorMessage: "//div[@id='pass-error']",
    },
    paymentsPage: {
        placeOrderButton: "button[title='Place Order']",
    },
    productPage: {
        productTitle: "//span[@class='base' and @data-ui-id='page-title-wrapper']",
        productSize: (size) => `//div[contains(@class, 'swatch-option text') and @option-label='${size}']`,
        productColor: (color) => `//div[contains(@class, 'swatch-option color') and @option-label='${color}']`,
        productQuantity: "//input[@id='qty']",
        addToCartButton: "//button[@id='product-addtocart-button']",
        cartSuccessMessage: ".message-success",
        cartIcon: ".action.showcart",
        proceedToCheckoutButton: "#top-cart-btn-checkout",
    },
    registrationPage: {
        inputFirstName: "//input[@name='firstname' and @title='First Name']",
        inputLastName: "//input[@name='lastname' and @title='Last Name']",
        inputEmail: "//input[@name='email' and @title='Email']",
        inputPassword: "//input[@name='password' and @title='Password']",
        inputConfirmPassword: "//input[@name='password_confirmation' and @title='Confirm Password']",
        buttonSubmit: "//button[@class='action submit primary' and @title='Create an Account']/span[contains(text(), 'Create an Account')]",
        pageTitle: "//h1[contains(text(), 'Create New Customer Account')]",
        registrationSuccessMessage: "//div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']",
        registrationErrorMessage: "div.message-error[data-ui-id='message-error']",
        emailErrorMessage: "//div[@id='email_address-error']",
        passwordErrorMessage: "//div[@id='password-error']",
        passwordConfirmationErrorMessage: "//div[@id='password-confirmation-error']",
        firstNameErrorMessage: "//div[@id='firstname-error']",
        lastNameErrorMessage: "//div[@id='lastname-error']",
    },
    searchPage: {
        sizeFilter: "//div[@data-role='title' and text()='Size']",
        colorFilter: "//div[@data-role='title' and text()='Color']",
        sizeFilterOption: (size) => `.swatch-attribute-options a[aria-label='${size}'] .swatch-option.text`,
        colorFilterOption: (color) => `.swatch-attribute-options a[aria-label='${color}'] .swatch-option.color`,
        categoryMenu: (category) => `//a[@href="https://magento.softwaretestingboard.com/${category.toLowerCase()}.html"]`,
        firstLevelSubCategoryMenu: (category, subcategory) => `//a[@href="https://magento.softwaretestingboard.com/${category.toLowerCase()}/${subcategory.toLowerCase()}-${category.toLowerCase()}.html"]`,
        secondLevelSubCategoryMenu: (category, subcategory, secondLevel) => `//a[@href="https://magento.softwaretestingboard.com/${category.toLowerCase()}/${subcategory.toLowerCase()}-${category.toLowerCase()}/${secondLevel.toLowerCase()}-${category.toLowerCase()}.html"]`,
        sortByDropdown: "//select[@data-role='sorter']",
        sortDirectionArrow: "a[data-role='direction-switcher']"
    },
    shippingPage: {
        inputStreetAddress: '//input[@name="street[0]"]',
        inputCity: '//input[@name="city"]',
        inputPostalCode: '//input[@name="postcode"]',
        inputPhoneNumber: '//input[@name="telephone"]',
        dropdownCountry: '//select[@name="country_id"]',
        dropdownState: '//select[@name="region_id"]',
        buttonNext: '//button[@data-role="opc-continue"]',
        inputFlatRate: `input[value='flatrate_flatrate']`,
        existingAddressOption: '//div[contains(@class, "shipping-address-item") and contains(@class, "selected-item")]',
    },
    successPage: {
        spanThankYouMessage: "//span[@class='base' and @data-ui-id='page-title-wrapper']",
        continueShoppingButton: "a.action.primary.continue",
    },
};

module.exports = selectors;
